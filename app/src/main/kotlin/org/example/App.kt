/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example


fun esParOImpar(numero: Int): String {
    return if (numero % 2 == 0) "Par" else "Impar"
}

fun menos_mas(numero: Int): String {
    return when {
        numero > 0 -> "El número es positivo."
        numero < 0 -> "El número es negativo."
        else -> "El número es cero."
    }



}
fun mostrarNumerosConLoops() {
    // Usando for
    println("Usando for:")
    for (i in 1..10) {
        println(i)
    }
    
    // Usando while
    println("\nUsando while:")
    var j = 1
    while (j <= 10) {
        println(j)
        j++
    }
    
    // Usando do-while
    println("\nUsando do-while:")
    var k = 1
    do {
        println(k)
        k++
    } while (k <= 10)
}
fun mostrarNumerosParesConLoops() {
    // Usando for
    println("Usando for:")
    for (i in 2..20 step 2) {
        println(i)
    }
    
    // Usando while
    println("\nUsando while:")
    var j = 2
    while (j <= 20) {
        println(j)
        j += 2
    }
    
    // Usando do-while
    println("\nUsando do-while:")
    var k = 2
    do {
        println(k)
        k += 2
    } while (k <= 20)
}


fun factorial(n: Int): Int {
    return if (n <= 1) 1 else n * factorial(n - 1)
}

fun saludar(nombre: String, edad: Int = 0) {
    println("Hola $nombre, tienes $edad años")
}

fun potencia(base: Int, exponente: Int): Int {
    var resultado = 1
    for (i in 1..exponente) {
        resultado *= base
    }
    return resultado
}

fun main() {
    println("Hola Kotlin")
    
   
    val numero1 = 5
    val numero2 = -3
    val numero3 = 0
    
    println("Número $numero1: ${esParOImpar(numero1)}")
    println("Número $numero2: ${esParOImpar(numero2)}")
    println("Número $numero3: ${esParOImpar(numero3)}")
    
    println(menos_mas(numero1))  
    println(menos_mas(numero2))  
    println(menos_mas(numero3))  

    mostrarNumerosConLoops()
    mostrarNumerosParesConLoops()

        val base = 2
    val exponente = 5
    val resultado = potencia(base, exponente)

    println("$base elevado a $exponente es $resultado")


}


